<template>
  <!-- mask -->
  <!-- <view class="dialog-mask"
        wx:if="{{isShowDialog}}"
        @tap="onHiddenDialog"></view> -->

  <view class="show-container"
        wx:if="{{isShowDialog}}">
    <view class="show-box">
      <view class="show-logo-box">
        <image src="{{toplogo}}" />
        <view class="show-mall-name">{{topname}}</view>
      </view>
      <view class="show-text-box">
        <view class="show-text-name">需要您的授权才能正常使用哦！</view>
        <view class="show-text-info">
          <text>·</text>请允许我们获得您的公开资讯</view>
        <view class="show-text-info">
          <text>·</text>我们不会公布您的这些信息</view>
        <view class="show-text-info">
          <text>·</text>只是为了给您提供更好的服务</view>
      </view>
      <button open-type="getUserInfo"
              bindgetuserinfo="onGetUserInfo">允许</button>
    </view>
  </view>
</template>
<script>
import wepy from 'wepy';
import apiUtil from '../api/apiUtil';
import tip from '../utils/tip';
import { USERINFO } from '../utils/constant';
export default class loginDialog extends wepy.component {
  props = {
    title: {
      type: String,
      default: '提示'
    },
    content: {
      type: String,
      default: '没有信息'
    },
    isShowDialog: {
      type: Boolean,
      default: false,
      twoWay: true
    }
  };

  data = {
    animation: {},
    animationData: {},
    toplogo: '',
    topname: ''
  };

  onLoad() {
    this._onGetSysParams();
    var animation = wx.createAnimation({
      duration: 200,
      timingFunction: 'linear',
      delay: 0
    });
    this.animation = animation;
    animation
      .opacity(0)
      .rotateX(-100)
      .step();
    this.animationData = animation.export();
    let t = this;
    setTimeout(function() {
      animation
        .opacity(1)
        .rotateX(0)
        .step();
      t.animationData = animation;
    });
  }

  // 获取系统参数
  _onGetSysParams() {
    let _params = {
      keys: '03,04'
    };
    apiUtil.onGetSysParamsApi(_params, res => {
      if (res.data.code == 0) {
        for (let i in res.data.data) {
          if (res.data.data[i].key == '03') {
            this.toplogo = res.data.data[i].value;
          } else if (res.data.data[i].key == '04') {
            this.topname = res.data.data[i].value;
          }
        }
      }
      this.$apply();
    });
  }

  async _onWxLogin(e) {
    let _reslogin = await wepy.login();
    console.log('reslogin==', _reslogin);
    if (_reslogin.errMsg != 'login:ok') {
      return;
    }
    let _params = {};
    _params.code = _reslogin.code;
    apiUtil.onWxLoginApi(_params, res => {
      if (res.data.code == 0) {
        // let _userInfo = Object.assign(e.detail.userInfo, res.data.data);
        this._onGetUserDetail(res.data.data);
      } else if (res.data.code == 10000) {
        this._onWxRegister(e);
      } else {
        tip.optionModal('提示', '用户登录失败，请稍后重试或联系管理员', false);
      }
    });
  }

  async _onWxRegister(e) {
    let _reslogin = await wepy.login();
    console.log('reslogin==', _reslogin);
    if (_reslogin.errMsg != 'login:ok') {
      return;
    }
    let _params = {};
    _params.code = _reslogin.code;
    _params.encryptedData = e.detail.encryptedData;
    _params.iv = e.detail.iv;
    _params.referrer = wepy.getStorageSync('referrer');
    _params.referrer &&
      (_params.postJsonString = JSON.stringify({ pid: _params.referrer }));
    apiUtil.onRegisterApi(_params, res => {
      if (res.data.code == 0) {
        this._onWxLogin(e);
      } else {
        tip.optionModal('提示', '用户注册失败，请稍后重试或联系管理员', false);
      }
    });
  }

  _onGetUserDetail(data) {
    let _params = {};
    _params.token = data.token;
    apiUtil.onUserDetailApi(_params, res => {
      if (res.data.code == 0) {
        let userInfo = Object.assign(data, res.data.data);
        this._onGetUserAmount(userInfo);
      }
    });
  }

  _onGetUserAmount(userInfo) {
    let _params = {};
    _params.token = userInfo.token;
    apiUtil.onUserAmountApi(_params, res => {
      if (res.data.code == 0) {
        userInfo.amount = res.data.data;
        wepy.setStorageSync(USERINFO, userInfo);
        this.$emit('login-success');
      }
    });
  }

  methods = {
    onGetUserInfo(e) {
      if (e.detail.errMsg == 'getUserInfo:ok') {
        this.userInfo = e.detail.userInfo;
        console.log(e);
        this._onWxLogin(e);
      }
    },
    onHiddenDialog() {
      this.isShowDialog = false;
    }
  };
}
</script>
<style lang="less">
.dialog-mask {
  width: 100%;
  height: 100%;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 1000;
  background: #333;
  opacity: 0.5;
  overflow: hidden;
}
.dialog-box {
  width: 650rpx;
  overflow: hidden;
  position: fixed;
  top: 50%;
  left: 0;
  z-index: 1001;
  background: #fff;
  border-radius: 8rpx;
  margin: -300rpx 50rpx 0 50rpx;
}
.dialog-title {
  margin-top: 20rpx;
  font-size: 34rpx;
  width: 100%;
  text-align: center;
  color: #333;
}
.dialog-content {
  display: inline-block;
  margin-left: 5%;
  margin-top: 20rpx;
  font-size: 30rpx;
  color: #333;
  margin-bottom: 30rpx;
}
.show-container {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.3);
  z-index: 99999999999;
}

.show-container .show-box {
  width: 70%;
  margin: 0 auto;
  height: 600rpx;
  background-color: #fff;
  margin-top: 40%;
  border-radius: 10rpx;
}

.show-logo-box {
  text-align: center;
  width: 80%;
  border-bottom: 1px solid #f5f5f5;
  margin: 0 auto;
  padding-top: 40rpx;
}

.show-logo-box image {
  width: 120rpx;
  height: 120rpx;
  border-radius: 50%;
  display: block;
  margin: 0 auto;
}

.show-mall-name {
  font-size: 32rpx;
  margin-top: 20rpx;
  margin-bottom: 20rpx;
  color: #333;
}

.show-text-box {
  margin-top: 20rpx;
  margin-bottom: 40rpx;
}

.show-text-name {
  font-size: 30rpx;
  color: #333;
  width: 80%;
  margin: 0 auto;
}

.show-text-info {
  width: 80%;
  margin: 0 auto;
  font-size: 24rpx;
  color: #999;
  margin-top: 10rpx;
}

.show-text-info text {
  margin-right: 10rpx;
  font-size: 26rpx;
}

.show-box button::after {
  border-radius: 4rpx;
  border: 0;
}

.show-box button {
  width: 80%;
  height: 70rpx;
  line-height: 70rpx;
  font-size: 30rpx;
  background-color: #04be01;
  color: #fff;
}
</style>
